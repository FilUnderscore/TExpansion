package com.apocolypse.launcher;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.GraphicsDevice;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Timer;
import java.util.TimerTask;

import javax.imageio.ImageIO;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.ButtonModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JPasswordField;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;
import javax.swing.border.TitledBorder;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

public class MainFrame extends JFrame
{
	private static final long serialVersionUID = -3126950667368814528L;
	
	JLabel contentPane;
	JLabel nameLabel;
	JPanel panel1;
	JButton buttonLogin1;
	JButton buttonLogin2;
	JButton buttonWindowed;
	static JTextField usernameBox;
	JPasswordField passwordBox;
	String username;
	String password;
	
	boolean signedIn = false;
	boolean fullscreen = false;
	
	public MainFrame()
	{
		panel1 = new JPanel();  

		Border blackline, raisedetched, loweredetched,
	    raisedbevel, loweredbevel, empty;

	Border paneEdge = BorderFactory.createEmptyBorder(0,10,10,10);

	blackline = BorderFactory.createLineBorder(Color.black);
	raisedetched = BorderFactory.createEtchedBorder(EtchedBorder.RAISED);
	loweredetched = BorderFactory.createEtchedBorder(EtchedBorder.LOWERED);
	raisedbevel = BorderFactory.createRaisedBevelBorder();
	loweredbevel = BorderFactory.createLoweredBevelBorder();
	empty = BorderFactory.createEmptyBorder();
		final TitledBorder titled;
		titled = BorderFactory.createTitledBorder(loweredetched, "title");
        addCompForTitledBorder(titled,
                               "titled lowered etched border"
                                   + " (right just., default pos.)",
                               TitledBorder.RIGHT,
                               TitledBorder.DEFAULT_POSITION,
                               panel1);
		buttonWindowed = new JButton();
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		BufferedImage buttonLogin_img1 = new ImgUtils().scaleImage(200, 50, "login_button_unhover.png");
		BufferedImage buttonLogin_img2 = new ImgUtils().scaleImage(200, 50, "login_button_hover.png");
		BufferedImage background_img = new ImgUtils().scaleImage(screenSize.width, screenSize.height, "background.png");
		ImageIcon background_icon = new ImageIcon(background_img);
		final ImageIcon buttonLogin_icon1 = new ImageIcon(buttonLogin_img1);
		buttonLogin1 = new JButton();
		buttonLogin2 = new JButton();
		usernameBox = new JTextField();
		passwordBox = new JPasswordField();
		usernameBox.setSize(200, 10);
		usernameBox.setBounds(868, 500, 200, 20);
		usernameBox.setText("Username");
		passwordBox.setText("Password");
		passwordBox.setSize(200, 10);
		passwordBox.setBounds(868, 600, 200, 20);
		
		buttonLogin1.addActionListener(new ActionListener() {
			 
            public void actionPerformed(ActionEvent e)
            {
                buttonLogin1.setVisible(false);
                add(usernameBox);
                add(passwordBox);
                add(buttonLogin2);
                buttonLogin2.setVisible(true);
                usernameBox.setVisible(true);
                passwordBox.setVisible(true);
                pack();
            }
        });      
		
		buttonLogin2.addActionListener(new ActionListener() {
			 
            public void actionPerformed(ActionEvent e)
            {
                add(usernameBox);
                add(passwordBox);
                add(buttonLogin2);
                buttonLogin2.setVisible(false);
                usernameBox.setVisible(true);
                login();
                passwordBox.setVisible(false);
                pack();
            }
        });      
		buttonLogin1.setBounds(870, 800, 70, 30);
		buttonLogin1.setSize(200, 50);
		buttonLogin1.setIcon(buttonLogin_icon1);
		buttonLogin2.setBounds(870, 800, 70, 30);
		buttonLogin2.setSize(200, 50);
		buttonLogin2.setIcon(buttonLogin_icon1);
		contentPane = new JLabel();
		contentPane.setIcon(background_icon);
		contentPane.setLayout(new BorderLayout());
		setContentPane(contentPane);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setVisible(true);
		add(panel1);
		add(buttonLogin1);
	}
	
	/** Returns an ImageIcon, or null if the path was invalid. */
	protected ImageIcon createImageIcon(String path,
	                                           String description) {
	    java.net.URL imgURL = getClass().getResource(path);
	    if (imgURL != null) {
	        return new ImageIcon(imgURL, description);
	    } else {
	        System.err.println("Couldn't find file: " + path);
	        return null;
	    }
	}
	
	public void addCompForTitledBorder(TitledBorder border,
            String description,
            int justification,
            int position,
            Container container) {
border.setTitleJustification(justification);
border.setTitlePosition(position);
addCompForBorder(border, description,
     container);
}
	
	public void addCompForBorder(Border border,
            String description,
            Container container) {
JPanel comp = new JPanel(new GridLayout(1, 1), false);
JLabel label = new JLabel(description, JLabel.CENTER);
comp.add(label);
comp.setBorder(border);

container.add(Box.createRigidArea(new Dimension(0, 10)));
container.add(comp);
}


	@SuppressWarnings("deprecation")
	public void login()
	{
		username = usernameBox.getText();
		password = passwordBox.getText();
		if((username != null) && (password != null))
		{
			usernameBox.setText("Logging in");
			usernameBox.disable();
			Timer t = new Timer();
			t.schedule(new TimerTask() {

			            @Override
			            public void run() {
			               usernameBox.setText("Logging in.");
			            }
			        }, 1500);
		}
	}
	

}
